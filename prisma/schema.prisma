// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Brand {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  Item  Item[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Category {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  Item        Item[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Unit {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  abbreviation String
  Item         Item[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Warehouse {
  id                     String                   @id @default(auto()) @map("_id") @db.ObjectId
  title                  String
  location               String?
  description            String?
  warehouseType          String
  Item                   Item[]
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

model Item {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  category     Category @relation(fields: [categoryId], references: [id],onDelete : Cascade)
  categoryId   String   @db.ObjectId
  sku          String   @unique
  barcode      String?
  quantity     Int
  unit         Unit     @relation(fields: [unitId], references: [id])
  unitId       String   @db.ObjectId
  brand        Brand    @relation(fields: [brandId], references: [id])
  brandId      String   @db.ObjectId
  supplier     Supplier @relation(fields: [supplierId], references: [id])
  supplierId   String   @db.ObjectId
  buyingPrice  Float
  sellingPrice Float
  reOrderPoint Int
  warehouse    Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId  String    @db.ObjectId
  imageUrl     String
  weight       Float?
  dimensions   String?
  taxRate      Float
  description  String?
  notes        String?
  AddStockWarehouse      AddStockWarehouse[]
  TransferStockWarehouse TransferStockWarehouse[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model AddStockWarehouse {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  referenceNumber String
  item            Item @relation(fields: [itemId], references: [id])
  itemId          String
  addStockQty     Int
  notes           String?
  recievingWarehouseId String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model TransferStockWarehouse {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  referenceNumber   String
  transferStockQty  Int
  item              Item @relation(fields: [itemId], references: [id])
  itemId            String  
  notes             String?
  givingWarehouseId String
  recievingWarehouseId String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt 
}

model Supplier {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  phone        String?
  email        String?
  address      String?
  contactPerson String?
  supplierCode String   @unique
  paymentTerms String?
  taxId        String?
  notes        String?
  Item         Item[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

}